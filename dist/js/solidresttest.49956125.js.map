{"version":3,"sources":["webpack:///./src/views/SolidRestTest.vue?e77b","webpack:///src/views/SolidRestTest.vue","webpack:///./src/views/SolidRestTest.vue?5e78","webpack:///./src/views/SolidRestTest.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","result","on","test","staticRenderFns","console","log","rest","show","msg","runRest","name","data","base","file","text","methods","component"],"mappings":"sHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,KAAK,CAACJ,EAAIM,GAAG,qBAAqBN,EAAIM,GAAG,aAAaN,EAAIO,GAAGP,EAAIQ,QAAQ,KAAKJ,EAAG,SAAS,CAACK,GAAG,CAAC,MAAQT,EAAIU,OAAO,CAACV,EAAIM,GAAG,aAC3OK,EAAkB,G,wBCWtB,sCACAC,QAAQC,IAAIC,GACZ,4BACA,qBACA,kB,SAGA,E,kGAAA,8GACA,oBADA,SAEA,iCAFA,cAEA,EAFA,gBAGA,WAHA,UAGA,EAHA,YAIA,eAJA,uCAIA,SAJA,yBAIA,EAJA,kDAIA,SAJA,wBAKA,WALA,4C,wBAQA,SAASC,EAAKC,GAGZJ,QAAQC,IAAI,MAAd,kBAbAI,EAAQ,EAAR,GAgBA,OACEC,KAAM,gBAENC,KAHF,WAII,MAAO,CACLC,KAAN,sBACMC,KAAN,2BACMC,KAAN,gBACMd,OAAQ,gBAGZ,QAXF,WAWA,gLACA,gBADA,uBAEA,SAFA,cAEA,EAFA,gBAGA,SAHA,OAGA,EAHA,OAIA,eACA,WALA,+CAOEe,QAAS,CACP,KADJ,WACA,yKACA,EADA,sDAEA,SAFA,gBAIA,WAJA,uBAKA,SALA,cAKA,EALA,gBAMA,SANA,OAMA,EANA,OAOA,eACA,WARA,+CAaI,IAdJ,SAcA,gKACA,0BADA,sFAGI,KAjBJ,SAiBA,gKACA,2BADA,sFAGI,IApBJ,SAoBA,kKACA,wEADA,sFAGI,OAvBJ,SAuBA,gKACA,6BADA,sFAGI,KA1BJ,SA0BA,sKACA,WACA,cACA,qDACA,SAJA,sFAOI,SAjCJ,SAiCA,4KACA,oDADA,kBAEA,iBAFA,8CAII,WArCJ,SAqCA,0KACA,0DADA,kBAEA,kBAFA,gDCxFuV,I,YCOnVC,EAAY,eACd,EACAzB,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAa,E","file":"js/solidresttest.49956125.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('h3',[_vm._v(\"Solid Rest Test\")]),_vm._v(\" result : \"+_vm._s(_vm.result)+\" \"),_c('button',{on:{\"click\":_vm.test}},[_vm._v(\"Test\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container>\r\n    <h3>Solid Rest Test</h3>\r\n    result : {{ result}}\r\n\r\n    <button @click=\"test\">Test</button>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n/*global SolidRest, SolidBrowserFS*/\r\n/*eslint no-undef: \"error\"*/\r\nconst rest = new SolidRest([new SolidBrowserFS()])\r\nconsole.log(rest)\r\nconst base = \"app://bfs/IndexedDB\"\r\nconst file = base + \"/test-file.ttl\"\r\nconst text = \"<> a <#test>.\"\r\nrunRest( file, text )\r\n\r\nasync function runRest(file,text){\r\n  console.log('init')\r\n  let response = await rest.fetch( file,{method:\"PUT\",body:text} )\r\n  response = await rest.fetch( file )\r\n  if(response.status==200 && await response.text()==text) show(\"OK!\")\r\n  else show(\"FAIL!\")\r\n}\r\n\r\nfunction show(msg){\r\n  // let display = document.getElementById(\"results\")\r\n  // display.innerHTML = display.innerHTML + `<p>${msg}</p>`\r\n  console.log( `<p>${msg}</p>`  )\r\n}\r\n\r\nexport default {\r\n  name: 'SolidRestTest',\r\n\r\n  data() {\r\n    return {\r\n      base : \"app://bfs/IndexedDB\",\r\n      file : this.base + \"/test-file.ttl\",\r\n      text : \"<> a <#test>.\",\r\n      result: \"must change\"\r\n    };\r\n  },\r\n  async created(){\r\n    await this.PUT(file, this.text)\r\n    let res =  await this.GET(file)\r\n    let text = await res.text()\r\n    console.log(text)\r\n    this.result = text\r\n  },\r\n  methods: {\r\n    async test(){\r\n      let data = `<> a <#test>. \\n\r\n      <> dct:dateCreated \"${new Date()}\" .`\r\n\r\n      await this.PUT(file, data)\r\n      let res =  await this.GET(file)\r\n      let text = await res.text()\r\n      console.log(text)\r\n      this.result = text\r\n    },\r\n    // /* =========================================================== */\r\n    // /* REST METHODS                                                */\r\n    // /* =========================================================== */\r\n    async GET(url){\r\n      return await rest.fetch( url, {method:\"GET\"} )\r\n    },\r\n    async HEAD(url){\r\n      return await rest.fetch( url, {method:\"HEAD\"} )\r\n    },\r\n    async PUT(url,text){\r\n      return await rest.fetch( url, {method:\"PUT\",body:text,headers:{\"content-type\":\"text/turtle\"}} )\r\n    },\r\n    async DELETE(url){\r\n      return await rest.fetch( url, {method:\"DELETE\"} )\r\n    },\r\n    async POST(parent,item,content,link){\r\n      return await rest.fetch( parent,{\r\n        method:\"POST\",\r\n        headers:{slug:item,link:link,\"content-type\":\"text/turtle\"},\r\n        body:content\r\n      })\r\n    },\r\n    async postFile(parent,file,content){\r\n      let link = '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\r\n      return this.POST(parent,file,content,link)\r\n    },\r\n    async postFolder(parent,folder){\r\n      let link ='<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\r\n      return this.POST(parent,folder,'',link)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolidRestTest.vue?vue&type=template&id=c999ac6e&\"\nimport script from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\nexport * from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}