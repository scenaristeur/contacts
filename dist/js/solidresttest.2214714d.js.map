{"version":3,"sources":["webpack:///./src/views/SolidRestTest.vue?d14e","webpack:///src/views/SolidRestTest.vue","webpack:///./src/views/SolidRestTest.vue?5e78","webpack:///./src/views/SolidRestTest.vue","webpack:///./node_modules/core-js/modules/es.symbol.async-iterator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncIterator.js","webpack:///./node_modules/idb/build/esm/wrap-idb-value.js","webpack:///./node_modules/idb/build/esm/index.js","webpack:///./node_modules/idb/build/esm/async-iterators.js","webpack:///./src/models/Thing.js","webpack:///./src/models/Vcard.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","result","on","create","read","staticClass","directives","name","rawName","value","expression","attrs","domProps","$event","target","composing","message","post","_l","todo","key","id","$pouch","put","$set","remove","staticRenderFns","console","log","rest","show","msg","runRest","data","base","file","text","contacts_path","pouch","todos","methods","computed","contacts","storage","component","defineWellKnownSymbol","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap","addEventListener","then","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","prop","receiver","get","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","includes","args","apply","unwrap","storeNames","sort","transformCachableValue","Proxy","IDBRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","async","storeName","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Thing","jsonld","owl","as","schema","options","demo","createObjectStore","keyPath","createIndex","add","title","date","Date","body","getAllFromIndex","article","update","default_options","Vcard","Object","assign"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,KAAK,CAACJ,EAAIM,GAAG,qBAAqBN,EAAIM,GAAG,aAAaN,EAAIO,GAAGP,EAAIQ,QAAQ,KAAKJ,EAAG,WAAW,CAACK,GAAG,CAAC,MAAQT,EAAIU,SAAS,CAACV,EAAIM,GAAG,YAAYF,EAAG,WAAW,CAACK,GAAG,CAAC,MAAQT,EAAIW,OAAO,CAACX,EAAIM,GAAG,UAAUF,EAAG,MAAMA,EAAG,MAAM,CAACQ,YAAY,SAAS,CAACR,EAAG,QAAQ,CAACS,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOhB,EAAW,QAAEiB,WAAW,YAAYC,MAAM,CAAC,YAAc,YAAYC,SAAS,CAAC,MAASnB,EAAW,SAAGS,GAAG,CAAC,MAAQ,SAASW,GAAWA,EAAOC,OAAOC,YAAqBtB,EAAIuB,QAAQH,EAAOC,OAAOL,WAAUZ,EAAG,SAAS,CAACK,GAAG,CAAC,MAAQ,SAASW,GAAQpB,EAAIwB,KAAK,CAACD,QAASvB,EAAIuB,SAAS,GAAG,SAASvB,EAAIuB,QAAQ,MAAM,CAACvB,EAAIM,GAAG,eAAeN,EAAIyB,GAAIzB,EAAS,OAAE,SAAS0B,GAAM,OAAOtB,EAAG,MAAM,CAACuB,IAAID,EAAKE,IAAI,CAACxB,EAAG,QAAQ,CAACS,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOU,EAAY,QAAET,WAAW,iBAAiBE,SAAS,CAAC,MAASO,EAAY,SAAGjB,GAAG,CAAC,OAAS,SAASW,GAAQ,OAAOpB,EAAI6B,OAAOC,IAAIJ,EAAK,GAAG,UAAU,MAAQ,SAASN,GAAWA,EAAOC,OAAOC,WAAqBtB,EAAI+B,KAAKL,EAAM,UAAWN,EAAOC,OAAOL,WAAWhB,EAAIM,GAAG,gBAAgBF,EAAG,QAAQ,CAACS,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOU,EAAK,iBAAkBT,WAAW,0BAA0BE,SAAS,CAAC,MAASO,EAAK,kBAAmBjB,GAAG,CAAC,OAAS,SAASW,GAAQ,OAAOpB,EAAI6B,OAAOC,IAAIJ,EAAK,GAAG,UAAU,MAAQ,SAASN,GAAWA,EAAOC,OAAOC,WAAqBtB,EAAI+B,KAAKL,EAAM,gBAAiBN,EAAOC,OAAOL,WAAWZ,EAAG,SAAS,CAACK,GAAG,CAAC,MAAQ,SAASW,GAAQ,OAAOpB,EAAI6B,OAAOG,OAAON,EAAK,GAAG,YAAY,CAAC1B,EAAIM,GAAG,kBAAiB,IAAI,IAC1lD2B,EAAkB,G,sGC0BtB,sCACAC,QAAQC,IAAIC,GACZ,4BACA,qBACA,kB,SAGA,E,kGAAA,8GACA,oBADA,SAEA,iCAFA,cAEA,EAFA,gBAGA,WAHA,UAGA,EAHA,YAIA,eAJA,uCAIA,SAJA,yBAIA,EAJA,kDAIA,SAJA,wBAKA,WALA,4C,wBAQA,SAASC,EAAKC,GAGZJ,QAAQC,IAAI,MAAd,kBAbAI,EAAQ,EAAR,GAoBA,mBAKA,GACEzB,KAAM,gBAEN0B,KAHF,WAII,MAAO,CACLC,KAAN,sBACMC,KAAN,2BACMC,KAAN,gBACMnC,OAAQ,cACRoC,cAAN,GACMrB,QAAN,KAGEsB,MAAO,CAELC,MAAO,IAET,QAjBF,WAiBA,yKAEA,sCAFA,SAGA,6BAHA,cAGA,EAHA,OAIA,uBAJA,SAMA,gBANA,uBAOA,SAPA,cAOA,EAPA,iBAQA,SARA,QAQA,EARA,OASA,eACA,WAIA,sCAEA,+LAGA,sBAOA,KACA,mCACA,iDACA,oBACA,eACA,wCAfA,SAgBA,4EAhBA,cAgBA,EAhBA,OAiBA,eAjBA,kBAkBA,GAlBA,kGAyBA,sBAzCA,+CAgFEC,QAAS,CACP,KADJ,SACA,2KAIA,aACA,wBAGA,yDACA,6BACA,uBAIA,sBACA,eACA,4BAEA,4CAIA,oBAEA,6BACA,wBAzBA,+CAsCI,OAvCJ,WAuCA,uKACA,KACA,qCACA,iDACA,wCAJA,SAKA,qEALA,OAKA,EALA,OAMA,eANA,8CAQI,KA/CJ,WA+CA,8KACA,uBADA,OACA,EADA,OAEA,eAFA,8CASI,MAxDJ,WAwDA,yKACA,EADA,sDAEA,SAFA,gBAIA,WAJA,uBAKA,SALA,cAKA,EALA,gBAMA,SANA,OAMA,EANA,OAOA,eACA,WARA,+CAaI,IArEJ,SAqEA,gKACA,8DADA,sFAGI,KAxEJ,SAwEA,gKACA,2BADA,sFAMI,IA9EJ,SA8EA,8NACA,sBADA,SAEA,4DAFA,sFAII,OAlFJ,SAkFA,gKACA,6BADA,sFAGI,KArFJ,SAqFA,sKACA,WACA,cACA,qDACA,SAJA,sFAOI,SA5FJ,SA4FA,4KACA,oDADA,kBAEA,iBAFA,8CAII,WAhGJ,SAgGA,0KACA,0DADA,kBAEA,kBAFA,+CAKEC,SAAU,OAAZ,OAAY,CAAZ,CACIC,SAAU,SAAd,+BACIC,QAAS,SAAb,8BCjQuV,I,YCOnVC,EAAY,eACd,EACApD,EACAkC,GACA,EACA,KACA,KACA,MAIa,aAAAkB,E,8BClBf,IAAIC,EAAwB,EAAQ,QAIpCA,EAAsB,kB,0MCJP,SAASC,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,OAAwB,CACjC,GAAIA,OAAOC,gBACTF,EAASD,EAASE,OAAOC,eACX,MAAVF,GAAgB,OAAOA,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,WACTJ,EAASD,EAASE,OAAOG,UACX,MAAVJ,GAAgB,OAAOA,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gCCftB,MAAMC,EAAgB,CAACC,EAAQC,IAAiBA,EAAaC,KAAMC,GAAMH,aAAkBG,GAE3F,IAAIC,EACAC,EAEJ,SAASC,IACL,OAAQF,IACHA,EAAoB,CACjBG,YACAC,eACAC,SACAC,UACAC,iBAIZ,SAASC,IACL,OAAQP,IACHA,EAAuB,CACpBK,UAAUG,UAAUC,QACpBJ,UAAUG,UAAUE,SACpBL,UAAUG,UAAUG,qBAGhC,MAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QAClC,SAASK,EAAiBC,GACtB,MAAMC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KAClC,MAAMC,EAAW,KACbL,EAAQM,oBAAoB,UAAWC,GACvCP,EAAQM,oBAAoB,QAASE,IAEnCD,EAAU,KACZJ,EAAQM,EAAKT,EAAQ9E,SACrBmF,KAEEG,EAAQ,KACVJ,EAAOJ,EAAQQ,OACfH,KAEJL,EAAQU,iBAAiB,UAAWH,GACpCP,EAAQU,iBAAiB,QAASF,KAetC,OAbAP,EACKU,KAAMjF,IAGHA,aAAiBwD,WACjBO,EAAiBmB,IAAIlF,EAAOsE,KAI/Ba,MAAM,QAGXf,EAAsBc,IAAIX,EAASD,GAC5BC,EAEX,SAASa,EAA+BC,GAEpC,GAAIpB,EAAmBqB,IAAID,GACvB,OACJ,MAAME,EAAO,IAAIf,QAAQ,CAACC,EAASC,KAC/B,MAAMC,EAAW,KACbU,EAAGT,oBAAoB,WAAYY,GACnCH,EAAGT,oBAAoB,QAASE,GAChCO,EAAGT,oBAAoB,QAASE,IAE9BU,EAAW,KACbf,IACAE,KAEEG,EAAQ,KACVJ,EAAOW,EAAGP,OAAS,IAAIW,aAAa,aAAc,eAClDd,KAEJU,EAAGL,iBAAiB,WAAYQ,GAChCH,EAAGL,iBAAiB,QAASF,GAC7BO,EAAGL,iBAAiB,QAASF,KAGjCb,EAAmBiB,IAAIG,EAAIE,GAE/B,IAAIG,EAAgB,CAChB,IAAIrF,EAAQsF,EAAMC,GACd,GAAIvF,aAAkBoD,eAAgB,CAElC,GAAa,SAATkC,EACA,OAAO1B,EAAmB4B,IAAIxF,GAElC,GAAa,qBAATsF,EACA,OAAOtF,EAAOyF,kBAAoB5B,EAAyB2B,IAAIxF,GAGnE,GAAa,UAATsF,EACA,OAAOC,EAASE,iBAAiB,QAC3BC,EACAH,EAASI,YAAYJ,EAASE,iBAAiB,IAI7D,OAAOf,EAAK1E,EAAOsF,KAEvB,IAAItF,EAAQsF,EAAM3F,GAEd,OADAK,EAAOsF,GAAQ3F,GACR,GAEX,IAAIK,EAAQsF,GACR,OAAItF,aAAkBoD,iBACR,SAATkC,GAA4B,UAATA,IAGjBA,KAAQtF,IAGvB,SAAS4F,EAAaC,GAClBR,EAAgBQ,EAASR,GAE7B,SAASS,EAAaC,GAIlB,OAAIA,IAAS/C,YAAYM,UAAU0C,aAC7B,qBAAsB5C,eAAeE,UAYvCD,IAA0B4C,SAASF,GAC5B,YAAaG,GAIhB,OADAH,EAAKI,MAAMC,EAAOxH,MAAOsH,GAClBxB,EAAKhB,EAAiB8B,IAAI5G,QAGlC,YAAasH,GAGhB,OAAOxB,EAAKqB,EAAKI,MAAMC,EAAOxH,MAAOsH,KAtB9B,SAAUG,KAAeH,GAC5B,MAAMlB,EAAKe,EAAK1D,KAAK+D,EAAOxH,MAAOyH,KAAeH,GAElD,OADArC,EAAyBgB,IAAIG,EAAIqB,EAAWC,KAAOD,EAAWC,OAAS,CAACD,IACjE3B,EAAKM,IAsBxB,SAASuB,EAAuB5G,GAC5B,MAAqB,oBAAVA,EACAmG,EAAanG,IAGpBA,aAAiByD,gBACjB2B,EAA+BpF,GAC/B6C,EAAc7C,EAAOoD,KACd,IAAIyD,MAAM7G,EAAO0F,GAErB1F,GAEX,SAAS+E,EAAK/E,GAGV,GAAIA,aAAiB8G,WACjB,OAAOzC,EAAiBrE,GAG5B,GAAImE,EAAemB,IAAItF,GACnB,OAAOmE,EAAe0B,IAAI7F,GAC9B,MAAM+G,EAAWH,EAAuB5G,GAOxC,OAJI+G,IAAa/G,IACbmE,EAAee,IAAIlF,EAAO+G,GAC1B3C,EAAsBc,IAAI6B,EAAU/G,IAEjC+G,EAEX,MAAMN,EAAUzG,GAAUoE,EAAsByB,IAAI7F,GC5KpD,SAASgH,EAAOlH,EAAMmH,GAAS,QAAEC,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAe,IACxE,MAAM/C,EAAUgD,UAAUC,KAAKzH,EAAMmH,GAC/BO,EAAczC,EAAKT,GAgBzB,OAfI6C,GACA7C,EAAQU,iBAAiB,gBAAkByC,IACvCN,EAAQpC,EAAKT,EAAQ9E,QAASiI,EAAMC,WAAYD,EAAME,WAAY5C,EAAKT,EAAQ+B,gBAGnFa,GACA5C,EAAQU,iBAAiB,UAAW,IAAMkC,KAC9CM,EACKvC,KAAM2C,IACHP,GACAO,EAAG5C,iBAAiB,QAAS,IAAMqC,KACnCD,GACAQ,EAAG5C,iBAAiB,gBAAiB,IAAMoC,OAE9CjC,MAAM,QACJqC,EAcX,MAAMK,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAIC,IAC1B,SAASC,EAAU5H,EAAQsF,GACvB,KAAMtF,aAAkBgD,cAClBsC,KAAQtF,GACM,kBAATsF,EACP,OAEJ,GAAIoC,EAAclC,IAAIF,GAClB,OAAOoC,EAAclC,IAAIF,GAC7B,MAAMuC,EAAiBvC,EAAKwC,QAAQ,aAAc,IAC5CC,EAAWzC,IAASuC,EACpBG,EAAUP,EAAaxB,SAAS4B,GACtC,KAEEA,KAAmBE,EAAW7E,SAAWD,gBAAgBK,aACrD0E,IAAWR,EAAYvB,SAAS4B,GAClC,OAEJ,MAAM3F,EAAS+F,eAAgBC,KAAchC,GAEzC,MAAMlB,EAAKpG,KAAKoH,YAAYkC,EAAWF,EAAU,YAAc,YAC/D,IAAIhI,EAASgF,EAAGmD,MAQhB,OAPIJ,IACA/H,EAASA,EAAOoI,MAAMlC,EAAKmC,iBAMjBlE,QAAQmE,IAAI,CACtBtI,EAAO6H,MAAmB3B,GAC1B8B,GAAWhD,EAAGE,QACd,IAGR,OADAwC,EAAc7C,IAAIS,EAAMpD,GACjBA,EAEX0D,EAAc2C,IAAa,IACpBA,EACH/C,IAAK,CAACxF,EAAQsF,EAAMC,IAAaqC,EAAU5H,EAAQsF,IAASiD,EAAS/C,IAAIxF,EAAQsF,EAAMC,GACvFN,IAAK,CAACjF,EAAQsF,MAAWsC,EAAU5H,EAAQsF,IAASiD,EAAStD,IAAIjF,EAAQsF,MClF7E,MAAMkD,EAAqB,CAAC,WAAY,qBAAsB,WACxDC,EAAY,GACZC,EAAiB,IAAI/E,QACrBgF,EAAmC,IAAIhF,QACvCiF,EAAsB,CACxB,IAAI5I,EAAQsF,GACR,IAAKkD,EAAmBvC,SAASX,GAC7B,OAAOtF,EAAOsF,GAClB,IAAIuD,EAAaJ,EAAUnD,GAM3B,OALKuD,IACDA,EAAaJ,EAAUnD,GAAQ,YAAaY,GACxCwC,EAAe7D,IAAIjG,KAAM+J,EAAiCnD,IAAI5G,MAAM0G,MAASY,MAG9E2C,IAGfZ,eAAgBa,KAAW5C,GAEvB,IAAI6C,EAASnK,KAIb,GAHMmK,aAAkB5F,YACpB4F,QAAeA,EAAOC,cAAc9C,KAEnC6C,EACD,OACJA,EAASA,EACT,MAAME,EAAgB,IAAIzC,MAAMuC,EAAQH,GACxCD,EAAiC9D,IAAIoE,EAAeF,GAEpDhF,EAAsBc,IAAIoE,EAAe7C,EAAO2C,IAChD,MAAOA,QACGE,EAENF,QAAgBL,EAAelD,IAAIyD,IAAkBF,EAAOvF,YAC5DkF,EAAeQ,OAAOD,GAG9B,SAASE,EAAenJ,EAAQsF,GAC5B,OAASA,IAASnD,OAAOC,eACrBI,EAAcxC,EAAQ,CAACkD,SAAUD,eAAgBE,aACvC,YAATmC,GAAsB9C,EAAcxC,EAAQ,CAACkD,SAAUD,iBAEhE2C,EAAc2C,IAAa,IACpBA,EACH,IAAIvI,EAAQsF,EAAMC,GACd,OAAI4D,EAAenJ,EAAQsF,GAChBwD,EACJP,EAAS/C,IAAIxF,EAAQsF,EAAMC,IAEtC,IAAIvF,EAAQsF,GACR,OAAO6D,EAAenJ,EAAQsF,IAASiD,EAAStD,IAAIjF,EAAQsF,O,IClD/C8D,E,WACnB,aAAc,uBACZxK,KAAKyK,OAAS,CACZ,WAAY,CACVC,IAAK,iCACLC,GAAI,wCACJC,OAAQ,sBAEV,MAAO,KACP,QAAS,YACT,cAAe,kB,sDAID,IAAbC,EAAa,uDAAH,GACb5I,QAAQC,IAAI,OAAOlC,KAAO6K,GAC1B7K,KAAK8K,S,qNAGY/C,EAAO,WAAY,EAAG,CACrCG,QADqC,SAC7BS,GAEN,IAAMY,EAAQZ,EAAGoC,kBAAkB,WAAY,CAE7CC,QAAS,QAKXzB,EAAM0B,YAAY,OAAQ,W,cAVxBtC,E,gBAeAA,EAAGuC,IAAI,WAAY,CACvB,MAAO,OACPC,MAAO,YACPC,KAAM,IAAIC,KAAK,cACfC,KAAM,gB,cAKAlF,EAAKuC,EAAGvB,YAAY,WAAY,a,SAChC7B,QAAQmE,IAAI,CAChBtD,EAAGmD,MAAM2B,IAAI,CACX,MAAO,OACPC,MAAO,YACPC,KAAM,IAAIC,KAAK,cACfC,KAAM,cAERlF,EAAGmD,MAAM2B,IAAI,CACX,MAAO,OACPC,MAAO,YACPC,KAAM,IAAIC,KAAK,cACfC,KAAM,aAERlF,EAAGE,O,mBAKPrE,Q,UAAkB0G,EAAG4C,gBAAgB,WAAY,Q,yBAAzCrJ,I,gBAIAkE,EAAKuC,EAAGvB,YAAY,WAAY,aAChCoC,EAAQpD,EAAGmD,MAAMC,MAAM,Q,wBAEFA,EAAMU,QAAQ,IAAImB,KAAK,gB,4HAAjClB,E,EACTqB,E,kBAAerB,EAAOpJ,OAC5ByK,EAAQF,MAAQ,wBAChBnB,EAAOsB,OAAOD,G,uUAGVpF,EAAGE,K,kRCzEXoF,EAAkB,CACpB,MAAO,KACP,gBAAiB,GACjB,QAAS,cACT,mBAAoB,GACpB,oBAAqB,GACrB,iBAAkB,uDAKCC,E,wDACnB,aAAuC,MAA3Bd,EAA2B,uDAAjBa,EAAiB,8BACrC,eAOAE,OAAOC,OAAPD,OAAA,OAAAA,CAAA,GAAoBf,GARiB,E,UADNL","file":"js/solidresttest.2214714d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('h3',[_vm._v(\"Solid Rest Test\")]),_vm._v(\" result : \"+_vm._s(_vm.result)+\" \"),_c('b-button',{on:{\"click\":_vm.create}},[_vm._v(\"Create\")]),_c('b-button',{on:{\"click\":_vm.read}},[_vm._v(\"Read\")]),_c('hr'),_c('div',{staticClass:\"todos\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.message),expression:\"message\"}],attrs:{\"placeholder\":\"New Todo\"},domProps:{\"value\":(_vm.message)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.message=$event.target.value}}}),_c('button',{on:{\"click\":function($event){_vm.post({message: _vm.message},{},'todos');_vm.message=''}}},[_vm._v(\"Save Todo\")]),_vm._l((_vm.todos),function(todo){return _c('div',{key:todo.id},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(todo.message),expression:\"todo.message\"}],domProps:{\"value\":(todo.message)},on:{\"change\":function($event){return _vm.$pouch.put(todo,{},'todos')},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(todo, \"message\", $event.target.value)}}}),_vm._v(\" vcard:name \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(todo['vcard:hasName']),expression:\"todo['vcard:hasName']\"}],domProps:{\"value\":(todo['vcard:hasName'])},on:{\"change\":function($event){return _vm.$pouch.put(todo,{},'todos')},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(todo, 'vcard:hasName', $event.target.value)}}}),_c('button',{on:{\"click\":function($event){return _vm.$pouch.remove(todo,{},'todos')}}},[_vm._v(\"Remove\")])])})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container>\r\n    <h3>Solid Rest Test</h3>\r\n    result : {{ result}}\r\n\r\n    <b-button @click=\"create\">Create</b-button>\r\n    <b-button @click=\"read\">Read</b-button>\r\n\r\n    <hr>\r\n    <div class=\"todos\">\r\n      <input v-model=\"message\" placeholder=\"New Todo\">\r\n      <button @click=\"post({message: message},{},'todos');message=''\">Save Todo</button>\r\n      <div v-for=\"todo in todos\" :key='todo.id'>\r\n        <input v-model=\"todo.message\" @change=\"$pouch.put(todo,{},'todos')\">\r\n        vcard:name     <input v-model=\"todo['vcard:hasName']\" @change=\"$pouch.put(todo,{},'todos')\">\r\n        <button @click=\"$pouch.remove(todo,{},'todos')\">Remove</button>\r\n      </div>\r\n    </div>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n/*global SolidRest, SolidBrowserFS*/\r\n/*eslint no-undef: \"error\"*/\r\n//import $ from 'jquery'\r\n\r\n\r\nconst rest = new SolidRest([new SolidBrowserFS()])\r\nconsole.log(rest)\r\nconst base = \"app://bfs/IndexedDB\"\r\nconst file = base + \"/test-file.ttl\"\r\nconst text = \"<> a <#test>.\"\r\nrunRest( file, text )\r\n\r\nasync function runRest(file,text){\r\n  console.log('init')\r\n  let response = await rest.fetch( file,{method:\"PUT\",body:text} )\r\n  response = await rest.fetch( file )\r\n  if(response.status==200 && await response.text()==text) show(\"OK!\")\r\n  else show(\"FAIL!\")\r\n}\r\n\r\nfunction show(msg){\r\n  // let display = document.getElementById(\"results\")\r\n  // display.innerHTML = display.innerHTML + `<p>${msg}</p>`\r\n  console.log( `<p>${msg}</p>`  )\r\n}\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//import $ from 'jquery'\r\nimport auth from 'solid-auth-client';\r\nimport FC from 'solid-file-client'\r\nconst fc = new FC( auth )\r\n\r\nimport { mapState } from 'vuex';\r\nimport Vcard from '@/models/Vcard.js'\r\n\r\nexport default {\r\n  name: 'SolidRestTest',\r\n\r\n  data() {\r\n    return {\r\n      base : \"app://bfs/IndexedDB\",\r\n      file : this.base + \"/test-file.ttl\",\r\n      text : \"<> a <#test>.\",\r\n      result: \"must change\",\r\n      contacts_path : \"\",\r\n      message:\"\"\r\n    };\r\n  },\r\n  pouch: {\r\n    // The simplest usage. queries all documents from the \"todos\" pouch database and assigns them to the \"todos\" vue property.\r\n    todos: {/*empty selector*/}\r\n  },\r\n  async created(){\r\n\r\n    console.log(\"databases\",this.$databases)\r\n    let todos =  await this.$pouch.allDocs({/*OPTIONAL options*/}, 'todos')\r\n    console.log(\"todos\",todos)\r\n\r\n    await this.PUT(file, this.text)\r\n    let res =  await this.GET(file)\r\n    let text = await res.text()\r\n    console.log(text)\r\n    this.result = text\r\n    //  this.contacts_path_idb = this.base+'/contacts/'\r\n    //let app = this\r\n\r\n    this.contacts_path = this.storage+'contacts/'\r\n\r\n    this.$pouch.syncToAnything = async (docs) => {\r\n      // Sync function receives a document batch\r\n      // Should return a promise\r\n      console.log(\"docs\",docs)\r\n      // Example:\r\n      // return $.ajax({\r\n      //   url: 'https://spoggy-test9.solidcommunity.net/couchdb/',\r\n      //   data: JSON.stringify(docs),\r\n      //   method: 'POST'\r\n      // })\r\n      let contact = {}\r\n      contact['@id'] = uuidv4()+'.json'\r\n      contact['schema:dateCreated'] = new Date().toISOString()\r\n      contact.message = docs.message\r\n      console.log(contact)\r\n      console.log(contact, this.contacts_path+contact['@id'])\r\n      let res = await fc.createFile(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\r\n      console.log(res)\r\n      return   res //await this.PUT(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\r\n    }, {\r\n      sync_id: 'talkingToMyRestAPI',\r\n      batch_size: 10\r\n    }\r\n\r\n\r\n    console.log(this.$pouch)\r\n\r\n\r\n\r\n    //https://docs.couchdb.org/en/stable/replication/protocol.html\r\n    //  PouchDB.plugin(PouchdbSyncToAnything)\r\n\r\n    //  var myDb = new PouchDB('exampleDB')\r\n\r\n\r\n    //let path = 'https://spoggy-test9.solidcommunity.net/couchdb/'\r\n    // let head = await this.HEAD(path)\r\n    // console.log(\"CouchDB_HEAD\",head)\r\n    // create database\r\n    //this.$pouch.put(path)\r\n    // Send all documents to the remote database, and stream changes in real-time. Note if you use filters you need to set them correctly for pouchdb and couchdb. You can set them for each direction separatly: options.push/options.pull. PouchDB might not need the same filter to push documents as couchdb to send the filtered requested documents.\r\n    // this.$pouch.sync('todos', 'http://localhost:5984/todos', options);\r\n    //  this.$pouch.sync('todos', path, {headers:{\"Accept\": 'application/json', 'Content-Type': 'application/json'}} );\r\n\r\n\r\n    // console.log(this.$pouch)\r\n    // //let docs = this.todos\r\n    //     this.$pouch.syncToAnything(function (docs) {\r\n    //       // Sync function receives a document batch\r\n    //       // Should return a promise\r\n    //\r\n    //       // Example:\r\n    //       return $.ajax({\r\n    //         url: 'https://spoggy-test9.solidcommunity.net/couchdb/',\r\n    //         data: JSON.stringify(docs),\r\n    //         method: 'POST'\r\n    //       })\r\n    //     }, {\r\n    //       sync_id: 'talkingToMyRestAPI',\r\n    //       batch_size: 10\r\n    //     })\r\n\r\n\r\n  },\r\n  methods: {\r\n    async post(message, empty, base){\r\n      //{message: message},{},'todos'\r\n      //  let pouch = this.$pouch\r\n\r\n      let vcard = new Vcard()\r\n      let path = this.storage+'contacts/'\r\n      //  console.log('add',path, contact)\r\n\r\n      vcard['@id'] == null ? vcard['@id'] = path+uuidv4()+'.jsonld' :''\r\n      vcard['vcard:hasName'] = message.message\r\n      console.log(\"vcard\",vcard)\r\n      // const resultArray = arr.map(elm => ({ Name: elm.id, Data: elm.name}));\r\n\r\n      // rename prop jslonld : @id , pouch : _id https://medium.com/front-end-weekly/immutably-rename-object-keys-in-javascript-5f6353c7b6dd\r\n      let pouch_card = Object.assign({}, vcard);\r\n      pouch_card._id = pouch_card['@id']\r\n      console.log('pouch_card', pouch_card)\r\n\r\n      vcard.save({option_test: \"bla\", base: 'contacts'})\r\n\r\n\r\n\r\n      this.$pouch.put(pouch_card, empty, base)\r\n\r\n      let result = this.$pouch.syncToAnything(message)\r\n      console.log(\"RESULT\",result)\r\n      // .then(function(){\r\n      //   return pouch.changes({\r\n      //     since: 0,\r\n      //     include_docs: true\r\n      //   }).then(function (changes) {\r\n      //     console.log(changes)\r\n      //   }).catch(function (err) {\r\n      //     // handle errors\r\n      //     console.log(err)\r\n      //   });\r\n      // })\r\n    },\r\n    async create(){\r\n      let contact = {}\r\n      contact['@id'] = uuidv4()+'.jsonld'\r\n      contact['schema:dateCreated'] = new Date().toISOString()\r\n      console.log(contact, this.contacts_path+contact['@id'])\r\n      let res = await this.PUT(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\r\n      console.log(res)\r\n    },\r\n    async read(){\r\n      let res = await this.GET(this.contacts_path)\r\n      console.log(res)\r\n      // console.log(this.contacts_path)\r\n      // await fc.readFolder(this.contacts_path).then(async function(folder){\r\n      //   console.log('folder',folder)\r\n      // })\r\n    },\r\n\r\n    async test1(){\r\n      let data = `<> a <#test>. \\n\r\n      <> dct:dateCreated \"${new Date()}\" .`\r\n\r\n      await this.PUT(file, data)\r\n      let res =  await this.GET(file)\r\n      let text = await res.text()\r\n      console.log(text)\r\n      this.result = text\r\n    },\r\n    // /* =========================================================== */\r\n    // /* REST METHODS                                                */\r\n    // /* =========================================================== */\r\n    async GET(url){\r\n      return await rest.fetch( url, {method:\"GET\", headers:{\"Accept\": 'application/json'}} )\r\n    },\r\n    async HEAD(url){\r\n      return await rest.fetch( url, {method:\"HEAD\"} )\r\n    },\r\n    //     HEAD /source HTTP/1.1\r\n    // Host: localhost:5984\r\n    // User-Agent: CouchDB\r\n    async PUT(url,text,content_type = \"text/turtle\"){\r\n      console.log(\"text\",text)\r\n      return await rest.fetch( url, {method:\"PUT\",body:text,headers:{\"content-type\":content_type}} )\r\n    },\r\n    async DELETE(url){\r\n      return await rest.fetch( url, {method:\"DELETE\"} )\r\n    },\r\n    async POST(parent,item,content,link){\r\n      return await rest.fetch( parent,{\r\n        method:\"POST\",\r\n        headers:{slug:item,link:link,\"content-type\":\"text/turtle\"},\r\n        body:content\r\n      })\r\n    },\r\n    async postFile(parent,file,content){\r\n      let link = '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\r\n      return this.POST(parent,file,content,link)\r\n    },\r\n    async postFolder(parent,folder){\r\n      let link ='<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\r\n      return this.POST(parent,folder,'',link)\r\n    }\r\n  },\r\n  computed: mapState({\r\n    contacts: s =>  s.contacts.contacts,\r\n    storage: s => s.solid.storage\r\n  }),\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolidRestTest.vue?vue&type=template&id=27bbda56&\"\nimport script from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\nexport * from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { r as replaceTraps, i as instanceOfAny, a as reverseTransformCache, u as unwrap } from './wrap-idb-value.js';\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n","import { openDB } from 'idb/with-async-ittr.js';\r\n\r\nexport default class Thing {\r\n  constructor() {\r\n    this.jsonld = {\r\n      '@context': {\r\n        owl: \"http://www.w3.org/2002/07/owl#\",\r\n        as: \"https://www.w3.org/ns/activitystreams\",\r\n        schema: \"http://schema.org/\"\r\n      },\r\n      '@id': null,\r\n      '@type': \"owl:Thing\",\r\n      'schema:name': \"__NEW__THING__\"\r\n    }\r\n  }\r\n\r\n  save(options = {}){\r\n    console.log(\"save\",this,  options)\r\n    this.demo()\r\n  }\r\n  async demo() {\r\n    const db = await openDB('Articles', 1, {\r\n      upgrade(db) {\r\n        // Create a store of objects\r\n        const store = db.createObjectStore('articles', {\r\n          // The 'id' property of the object will be the key.\r\n          keyPath: '@id',\r\n          // If it isn't explicitly set, create a value by auto incrementing.\r\n          //  autoIncrement: true,\r\n        });\r\n        // Create an index on the 'date' property of the objects.\r\n        store.createIndex('date', 'date');\r\n      },\r\n    });\r\n\r\n    // Add an article:\r\n    await db.add('articles', {\r\n      '@id': 'boo1',\r\n      title: 'Article 1',\r\n      date: new Date('2019-01-01'),\r\n      body: 'Article one',\r\n    });\r\n\r\n    // Add multiple articles in one transaction:\r\n    {\r\n      const tx = db.transaction('articles', 'readwrite');\r\n      await Promise.all([\r\n        tx.store.add({\r\n          '@id': 'boo2',\r\n          title: 'Article 2',\r\n          date: new Date('2019-01-01'),\r\n          body: 'deuxieme ',\r\n        }),\r\n        tx.store.add({\r\n          '@id': 'boo3',\r\n          title: 'Article 3',\r\n          date: new Date('2019-01-02'),\r\n          body: 'et trois',\r\n        }),\r\n        tx.done,\r\n      ]);\r\n    }\r\n\r\n    // Get all the articles in date order:\r\n    console.log(await db.getAllFromIndex('articles', 'date'));\r\n\r\n    // Add 'And, happy new year!' to all articles on 2019-01-01:\r\n    {\r\n      const tx = db.transaction('articles', 'readwrite');\r\n      const index = tx.store.index('date');\r\n\r\n      for await (const cursor of index.iterate(new Date('2019-01-01'))) {\r\n        const article = { ...cursor.value };\r\n        article.body += ' And, happy new year!';\r\n        cursor.update(article);\r\n      }\r\n\r\n      await tx.done;\r\n    }\r\n  }\r\n}\r\n","import Thing from './Thing.js'\r\n//import VCardContext from '@/models/Vcard.jsonld.js'\r\n\r\n\r\nlet default_options = {\r\n  '@id': null,\r\n  'vcard:hasName': \"\",\r\n  '@type': \"vcard:VCard\",\r\n  'vcard:given-name': \"\",\r\n  'vcard:family-name': \"\",\r\n  'vcard:hasPhoto': 'https://image.flaticon.com/icons/svg/149/149992.svg'\r\n\r\n}\r\n//https://raw.githubusercontent.com/lanthaler/vCardOntology/master/Vcard.jsonld\r\n\r\nexport default class Vcard extends Thing {\r\n  constructor(options = default_options) {\r\n    super()\r\n    // assign context\r\n  //  Object.assign(this.jsonld['@context'], VCardContext)\r\n    // default\r\n\r\n\r\n    // assign options\r\n    Object.assign(this, options)\r\n\r\n    //this.jsonld['@type'] = \"vcard:VCard\",\r\n    //this.jsonld['vcard:hasName'] = \"__NEW__vcard:Name__\"\r\n\r\n\r\n    // this.basic_fields = [\r\n    //   this.picture = 'https://image.flaticon.com/icons/svg/149/149992.svg',\r\n    //   this.name = '',\r\n    //   this.birth = '',\r\n    //   this.email = '',\r\n    //   this.phone = '',\r\n    //   this.nationality = '',\r\n    // ]\r\n\r\n    //   this['@context'] = {\r\n    //     as: \"https://www.w3.org/ns/activitystreams\",\r\n    //     schema: \"http://schema.org/\"\r\n    //   },\r\n    //   this['@id'] = null\r\n    //   this['@type'] = \"Vcard\"\r\n    //   this['schema:name'] = \"__NEW__VCARD__\"\r\n  }\r\n}\r\n"],"sourceRoot":""}