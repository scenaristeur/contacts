{"version":3,"sources":["webpack:///./src/views/SolidRestTest.vue?d2a5","webpack:///src/views/SolidRestTest.vue","webpack:///./src/views/SolidRestTest.vue?5e78","webpack:///./src/views/SolidRestTest.vue","webpack:///./node_modules/core-js/modules/es.symbol.async-iterator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncIterator.js","webpack:///./src/models/Thing.js","webpack:///./src/models/Vcard.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","result","on","create","read","staticClass","directives","name","rawName","value","expression","attrs","domProps","$event","target","composing","message","post","_l","todo","key","id","$pouch","put","$set","remove","staticRenderFns","console","log","rest","show","msg","runRest","components","data","base","file","text","contacts_path","pouch","todos","methods","computed","contacts","storage","component","defineWellKnownSymbol","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","Thing","owl","as","schema","options","demo","store","indexes","db","$openDB","options2","db2","add","title","date","Date","body","tx","transaction","Promise","all","done","getAllFromIndex","index","iterate","cursor","article","update","default_options","Vcard","Object","assign"],"mappings":"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","file":"js/solidresttest.2ee6daae.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('h3',[_vm._v(\"Solid Rest Test\")]),_vm._v(\" result : \"+_vm._s(_vm.result)+\" \"),_c('b-button',{on:{\"click\":_vm.create}},[_vm._v(\"Create\")]),_c('b-button',{on:{\"click\":_vm.read}},[_vm._v(\"Read\")]),_c('hr'),_c('div',{staticClass:\"todos\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.message),expression:\"message\"}],attrs:{\"placeholder\":\"New Todo\"},domProps:{\"value\":(_vm.message)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.message=$event.target.value}}}),_c('button',{on:{\"click\":function($event){_vm.post({message: _vm.message},{},'todos');_vm.message=''}}},[_vm._v(\"Save Todo\")]),_vm._l((_vm.todos),function(todo){return _c('div',{key:todo.id},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(todo.message),expression:\"todo.message\"}],domProps:{\"value\":(todo.message)},on:{\"change\":function($event){return _vm.$pouch.put(todo,{},'todos')},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(todo, \"message\", $event.target.value)}}}),_vm._v(\" vcard:name \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(todo['vcard:hasName']),expression:\"todo['vcard:hasName']\"}],domProps:{\"value\":(todo['vcard:hasName'])},on:{\"change\":function($event){return _vm.$pouch.put(todo,{},'todos')},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(todo, 'vcard:hasName', $event.target.value)}}}),_c('button',{on:{\"click\":function($event){return _vm.$pouch.remove(todo,{},'todos')}}},[_vm._v(\"Remove\")])])})],2),_c('Items')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-container>\n    <h3>Solid Rest Test</h3>\n    result : {{ result}}\n\n    <b-button @click=\"create\">Create</b-button>\n    <b-button @click=\"read\">Read</b-button>\n\n    <hr>\n    <div class=\"todos\">\n      <input v-model=\"message\" placeholder=\"New Todo\">\n      <button @click=\"post({message: message},{},'todos');message=''\">Save Todo</button>\n      <div v-for=\"todo in todos\" :key='todo.id'>\n        <input v-model=\"todo.message\" @change=\"$pouch.put(todo,{},'todos')\">\n        vcard:name     <input v-model=\"todo['vcard:hasName']\" @change=\"$pouch.put(todo,{},'todos')\">\n        <button @click=\"$pouch.remove(todo,{},'todos')\">Remove</button>\n      </div>\n    </div>\n\n    <Items />\n\n\n  </b-container>\n</template>\n\n<script>\n/*global SolidRest, SolidBrowserFS*/\n/*eslint no-undef: \"error\"*/\n//import $ from 'jquery'\n\n\nconst rest = new SolidRest([new SolidBrowserFS()])\nconsole.log(rest)\nconst base = \"app://bfs/IndexedDB\"\nconst file = base + \"/test-file.ttl\"\nconst text = \"<> a <#test>.\"\nrunRest( file, text )\n\nasync function runRest(file,text){\n  console.log('init')\n  let response = await rest.fetch( file,{method:\"PUT\",body:text} )\n  response = await rest.fetch( file )\n  if(response.status==200 && await response.text()==text) show(\"OK!\")\n  else show(\"FAIL!\")\n}\n\nfunction show(msg){\n  // let display = document.getElementById(\"results\")\n  // display.innerHTML = display.innerHTML + `<p>${msg}</p>`\n  console.log( `<p>${msg}</p>`  )\n}\n\nimport { v4 as uuidv4 } from 'uuid';\n//import $ from 'jquery'\nimport auth from 'solid-auth-client';\nimport FC from 'solid-file-client'\nconst fc = new FC( auth )\n\nimport { mapState } from 'vuex';\nimport Vcard from '@/models/Vcard.js'\n\nexport default {\n  name: 'SolidRestTest',\n  components: {\n    'Items': () => import('@/views/Items'),\n  },\n  data() {\n    return {\n      base : \"app://bfs/IndexedDB\",\n      file : this.base + \"/test-file.ttl\",\n      text : \"<> a <#test>.\",\n      result: \"must change\",\n      contacts_path : \"\",\n      message:\"\"\n    };\n  },\n  pouch: {\n    // The simplest usage. queries all documents from the \"todos\" pouch database and assigns them to the \"todos\" vue property.\n    todos: {/*empty selector*/}\n  },\n  async created(){\n    console.log(\"databases\",this.$databases)\n    let todos =  await this.$pouch.allDocs({/*OPTIONAL options*/}, 'todos')\n    console.log(\"todos\",todos)\n\n    await this.PUT(file, this.text)\n    let res =  await this.GET(file)\n    let text = await res.text()\n    console.log(text)\n    this.result = text\n    //  this.contacts_path_idb = this.base+'/contacts/'\n    //let app = this\n\n    this.contacts_path = this.storage+'contacts/'\n\n    this.$pouch.syncToAnything = async (docs) => {\n      // Sync function receives a document batch\n      // Should return a promise\n      console.log(\"docs\",docs)\n      // Example:\n      // return $.ajax({\n      //   url: 'https://spoggy-test9.solidcommunity.net/couchdb/',\n      //   data: JSON.stringify(docs),\n      //   method: 'POST'\n      // })\n      let contact = {}\n      contact['@id'] = uuidv4()+'.json'\n      contact['schema:dateCreated'] = new Date().toISOString()\n      contact.message = docs.message\n      console.log(contact)\n      console.log(contact, this.contacts_path+contact['@id'])\n      let res = await fc.createFile(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\n      console.log(res)\n      return   res //await this.PUT(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\n    }, {\n      sync_id: 'talkingToMyRestAPI',\n      batch_size: 10\n    }\n\n\n    console.log(this.$pouch)\n\n\n\n    //https://docs.couchdb.org/en/stable/replication/protocol.html\n    //  PouchDB.plugin(PouchdbSyncToAnything)\n\n    //  var myDb = new PouchDB('exampleDB')\n\n\n    //let path = 'https://spoggy-test9.solidcommunity.net/couchdb/'\n    // let head = await this.HEAD(path)\n    // console.log(\"CouchDB_HEAD\",head)\n    // create database\n    //this.$pouch.put(path)\n    // Send all documents to the remote database, and stream changes in real-time. Note if you use filters you need to set them correctly for pouchdb and couchdb. You can set them for each direction separatly: options.push/options.pull. PouchDB might not need the same filter to push documents as couchdb to send the filtered requested documents.\n    // this.$pouch.sync('todos', 'http://localhost:5984/todos', options);\n    //  this.$pouch.sync('todos', path, {headers:{\"Accept\": 'application/json', 'Content-Type': 'application/json'}} );\n\n\n    // console.log(this.$pouch)\n    // //let docs = this.todos\n    //     this.$pouch.syncToAnything(function (docs) {\n    //       // Sync function receives a document batch\n    //       // Should return a promise\n    //\n    //       // Example:\n    //       return $.ajax({\n    //         url: 'https://spoggy-test9.solidcommunity.net/couchdb/',\n    //         data: JSON.stringify(docs),\n    //         method: 'POST'\n    //       })\n    //     }, {\n    //       sync_id: 'talkingToMyRestAPI',\n    //       batch_size: 10\n    //     })\n\n\n  },\n  methods: {\n    async post(message, empty, base){\n      //{message: message},{},'todos'\n      //  let pouch = this.$pouch\n\n      let vcard = new Vcard()\n      let path = this.storage+'contacts/'\n      //  console.log('add',path, contact)\n\n      vcard['@id'] == null ? vcard['@id'] = path+uuidv4()+'.jsonld' :''\n      vcard['vcard:hasName'] = message.message\n      console.log(\"vcard\",vcard)\n      // const resultArray = arr.map(elm => ({ Name: elm.id, Data: elm.name}));\n\n      // rename prop jslonld : @id , pouch : _id https://medium.com/front-end-weekly/immutably-rename-object-keys-in-javascript-5f6353c7b6dd\n      let pouch_card = Object.assign({}, vcard);\n      pouch_card._id = pouch_card['@id']\n      console.log('pouch_card', pouch_card)\n\n      vcard.save({option_test: \"bla\", base: 'contacts'})\n\n\n\n      this.$pouch.put(pouch_card, empty, base)\n\n      let result = this.$pouch.syncToAnything(message)\n      console.log(\"RESULT\",result)\n      // .then(function(){\n      //   return pouch.changes({\n      //     since: 0,\n      //     include_docs: true\n      //   }).then(function (changes) {\n      //     console.log(changes)\n      //   }).catch(function (err) {\n      //     // handle errors\n      //     console.log(err)\n      //   });\n      // })\n    },\n    async create(){\n      let contact = {}\n      contact['@id'] = uuidv4()+'.jsonld'\n      contact['schema:dateCreated'] = new Date().toISOString()\n      console.log(contact, this.contacts_path+contact['@id'])\n      let res = await this.PUT(this.contacts_path+contact['@id'], JSON.stringify(contact), \"application/json\")\n      console.log(res)\n    },\n    async read(){\n      let res = await this.GET(this.contacts_path)\n      console.log(res)\n      // console.log(this.contacts_path)\n      // await fc.readFolder(this.contacts_path).then(async function(folder){\n      //   console.log('folder',folder)\n      // })\n    },\n\n    async test1(){\n      let data = `<> a <#test>. \\n\n      <> dct:dateCreated \"${new Date()}\" .`\n\n      await this.PUT(file, data)\n      let res =  await this.GET(file)\n      let text = await res.text()\n      console.log(text)\n      this.result = text\n    },\n    // /* =========================================================== */\n    // /* REST METHODS                                                */\n    // /* =========================================================== */\n    async GET(url){\n      return await rest.fetch( url, {method:\"GET\", headers:{\"Accept\": 'application/json'}} )\n    },\n    async HEAD(url){\n      return await rest.fetch( url, {method:\"HEAD\"} )\n    },\n    //     HEAD /source HTTP/1.1\n    // Host: localhost:5984\n    // User-Agent: CouchDB\n    async PUT(url,text,content_type = \"text/turtle\"){\n      console.log(\"text\",text)\n      return await rest.fetch( url, {method:\"PUT\",body:text,headers:{\"content-type\":content_type}} )\n    },\n    async DELETE(url){\n      return await rest.fetch( url, {method:\"DELETE\"} )\n    },\n    async POST(parent,item,content,link){\n      return await rest.fetch( parent,{\n        method:\"POST\",\n        headers:{slug:item,link:link,\"content-type\":\"text/turtle\"},\n        body:content\n      })\n    },\n    async postFile(parent,file,content){\n      let link = '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"'\n      return this.POST(parent,file,content,link)\n    },\n    async postFolder(parent,folder){\n      let link ='<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n      return this.POST(parent,folder,'',link)\n    },\n  },\n  computed: mapState({\n    contacts: s =>  s.contacts.contacts,\n    storage: s => s.solid.storage,\n  }),\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidRestTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolidRestTest.vue?vue&type=template&id=52743932&\"\nimport script from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\nexport * from \"./SolidRestTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","\nexport default class Thing {\n  constructor() {\n  //  this.jsonld = {\n      this['@context'] =  {\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        as: \"https://www.w3.org/ns/activitystreams\",\n        schema: \"http://schema.org/\"\n      },\n      this['@id'] = null,\n      this['@type'] = \"owl:Thing\"\n    //  this['schema:name'] = \"__NEW__THING__\"\n    //}\n  }\n\n  save(options = {}){\n    console.log(\"save\",this,  options)\n    this.demo()\n  }\n  async demo() {\n\n    let options = {store: 'Articles', indexes: ['date']}\n    let db = this.$openDB(options)\n    console.log(\"DB\",db)\n    let options2 = {store: 'SwingPlop', indexes: ['date']}\n    let db2 = this.$openDB(options2)\n    console.log(\"DB2\", db2)\n\n\n    // Add an article:\n    await db.add('articles', {\n      '@id': 'boo1Bip',\n      title: 'Article 1',\n      date: new Date('2019-01-01'),\n      body: 'Article one',\n    });\n\n    // Add multiple articles in one transaction:\n    {\n      const tx = db.transaction('articles', 'readwrite');\n      await Promise.all([\n        tx.store.add({\n          '@id': 'boo2',\n          title: 'Article 2',\n          date: new Date('2019-01-01'),\n          body: 'deuxieme ',\n        }),\n        tx.store.add({\n          '@id': 'boo3',\n          title: 'Article 3',\n          date: new Date('2019-01-02'),\n          body: 'et trois',\n        }),\n        tx.done,\n      ]);\n    }\n\n    // Get all the articles in date order:\n    console.log(await db.getAllFromIndex('articles', 'date'));\n\n    // Add 'And, happy new year!' to all articles on 2019-01-01:\n    {\n      const tx = db.transaction('articles', 'readwrite');\n      const index = tx.store.index('date');\n\n      for await (const cursor of index.iterate(new Date('2019-01-01'))) {\n        const article = { ...cursor.value };\n        article.body += ' And, happy new year!';\n        cursor.update(article);\n      }\n\n      await tx.done;\n    }\n  }\n}\n","import Thing from './Thing.js'\n//import VCardContext from '@/models/Vcard.jsonld.js'\n\n\nlet default_options = {\n  '@id': null,\n  'vcard:hasName': \"\",\n  '@type': \"vcard:VCard\",\n  'vcard:given-name': \"\",\n  'vcard:family-name': \"\",\n//  'vcard:hasPhoto': 'https://image.flaticon.com/icons/svg/149/149992.svg'\n\n}\n//https://raw.githubusercontent.com/lanthaler/vCardOntology/master/Vcard.jsonld\n\nexport default class Vcard extends Thing {\n  constructor(options = default_options) {\n    super()\n    // assign context\n  //  Object.assign(this.jsonld['@context'], VCardContext)\n    // default\n\n\n    // assign options\n    Object.assign(this, options)\n\n    //this.jsonld['@type'] = \"vcard:VCard\",\n    //this.jsonld['vcard:hasName'] = \"__NEW__vcard:Name__\"\n\n\n    // this.basic_fields = [\n    //   this.picture = 'https://image.flaticon.com/icons/svg/149/149992.svg',\n    //   this.name = '',\n    //   this.birth = '',\n    //   this.email = '',\n    //   this.phone = '',\n    //   this.nationality = '',\n    // ]\n\n    //   this['@context'] = {\n    //     as: \"https://www.w3.org/ns/activitystreams\",\n    //     schema: \"http://schema.org/\"\n    //   },\n    //   this['@id'] = null\n    //   this['@type'] = \"Vcard\"\n    //   this['schema:name'] = \"__NEW__VCARD__\"\n  }\n}\n"],"sourceRoot":""}