{"version":3,"sources":["webpack:///./node_modules/vcf/node_modules/camelcase/index.js","webpack:///./node_modules/vcf/lib/vcard.js","webpack:///./src/views/Import.vue?4ab1","webpack:///src/views/Import.vue","webpack:///./src/views/Import.vue?bb51","webpack:///./src/views/Import.vue","webpack:///./node_modules/foldline/foldline.js","webpack:///./node_modules/vcf/lib/property.js","webpack:///./node_modules/vcf/lib/parse-lines.js"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","exports","default","vCard","this","version","versions","data","mimeType","extension","EOL","foldLine","normalize","isSupported","indexOf","parse","value","objects","split","cards","push","parseLines","fromJSON","jcard","JSON","Error","card","forEach","prop","addProperty","Property","format","vcf","props","keys","k","isEmpty","toString","prototype","constructor","get","key","clone","set","params","setProperty","add","_field","lines","begin","end","SyntaxError","substring","charset","toJCard","toJSON","render","_vm","_h","$createElement","_c","_self","_v","attrs","model","callback","$$v","file","expression","_s","contacts","_l","contact","$set","directives","name","rawName","staticClass","checked","staticRenderFns","console","log","watch","reader","FileReader","readAsText","onload","evt","app","onerror","methods","importer","component","CRLF","SP","MAX_LINE_LENGTH","DEFAULT_LINE_LENGTH","MIN_LINE_LENGTH","maxLength","hardWrap","output","index","nextIndex","line","lastIndexOf","unfold","field","_data","defineProperty","enumerable","capitalDashCase","is","type","propName","group","valueOf","object","createParams","param","parts","pattern","len","match","exec","property","pop","propParams","reduce","propVal"],"mappings":"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","file":"js/import.8f8e8dd2.js","sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/**\n * vCard\n * @constructor\n * @return {vCard}\n */\nfunction vCard() {\n\n  if( !(this instanceof vCard) )\n    return new vCard()\n\n  /** @type {String} Version number */\n  this.version = vCard.versions[ vCard.versions.length - 1 ]\n  /** @type {Object} Card data */\n  this.data = {}\n\n}\n\n/**\n * vCard MIME type\n * @type {String}\n */\nvCard.mimeType = 'text/vcard'\n\n/**\n * vCard file extension\n * @type {String}\n */\nvCard.extension = '.vcf'\n\n/**\n * vCard versions\n * @type {Array}\n */\nvCard.versions = [ '2.1', '3.0', '4.0' ]\n\n/**\n * VCF EOL character sequence\n * @type {String}\n */\nvCard.EOL = '\\r\\n'\n\n/**\n * Folds a long line according to the RFC 5322.\n * @see http://tools.ietf.org/html/rfc5322#section-2.1.1\n * @param  {String}  input\n * @param  {Number}  maxLength\n * @param  {Boolean} hardWrap\n * @return {String}\n */\nvCard.foldLine = require( 'foldline' )\n\n/**\n * Normalizes input (cast to string, line folding, whitespace)\n * @param  {String} input\n * @return {String}\n */\nvCard.normalize = function( input ) {\n  return ( input + '' )\n    // Trim whitespace\n    .replace( /^[\\s\\r\\n]+|[\\s\\r\\n]+$/g, '' )\n    // Trim blank lines\n    .replace( /(\\r\\n)[\\x09\\x20]?(\\r\\n)|$/g, '$1' )\n    // Unfold folded lines\n    .replace( /\\r\\n[\\x20\\x09]/g, \"\" )\n}\n\n/**\n * Check whether a given version is supported\n * @param  {String} version\n * @return {Boolean}\n */\nvCard.isSupported = function( version ) {\n  return /^\\d\\.\\d$/.test( version ) &&\n    vCard.versions.indexOf( version ) !== -1\n}\n\n/**\n * Parses a string or buffer into a vCard object\n * @param  {String|Buffer} value\n * @return {Array<vCard>}\n */\nvCard.parse = function( value ) {\n\n  var objects = ( value + '' ).split( /(?=BEGIN\\:VCARD)/gi )\n  var cards = []\n\n  for( var i = 0; i < objects.length; i++ ) {\n    cards.push( new vCard().parse( objects[i] ) )\n  }\n\n  return cards\n\n}\n\n/**\n * Parse an array of vcf formatted lines\n * @internal used by `vCard#parse()`\n * @type {Function}\n */\nvCard.parseLines = require( './parse-lines' )\n\n/**\n * Constructs a vCard from jCard data\n * @param  {Array} jcard\n * @return {vCard}\n */\nvCard.fromJSON = function( jcard ) {\n\n  jcard = typeof jcard === 'string' ?\n    JSON.parse( jcard ) : jcard\n\n  if( jcard == null || !Array.isArray( jcard ) )\n    return new vCard()\n\n  if( !/vcard/i.test( jcard[0] ) )\n    throw new Error( 'Object not in jCard format' )\n\n  var card = new vCard()\n\n  jcard[1].forEach( function( prop ) {\n    card.addProperty( vCard.Property.fromJSON( prop ) )\n  })\n\n  return card\n\n}\n\n/**\n * Format a card object according to the given version\n * @param  {vCard}  card\n * @param  {String} version\n * @return {String}\n */\nvCard.format = function( card, version ) {\n\n  version = version || card.version ||\n    vCard.versions[ vCard.versions.length - 1 ]\n\n  if( !vCard.isSupported( version ) )\n    throw new Error( 'Unsupported vCard version \"' + version + '\"' )\n\n  var vcf = []\n\n  vcf.push( 'BEGIN:VCARD' )\n  vcf.push( 'VERSION:' + version )\n\n  var props = Object.keys( card.data )\n  var prop = ''\n\n  for( var i = 0; i < props.length; i++ ) {\n    if( props[i] === 'version' ) continue;\n    prop = card.data[ props[i] ]\n    if( Array.isArray( prop ) ) {\n      for( var k = 0; k < prop.length; k++ ) {\n        if( prop[k].isEmpty() ) continue\n        vcf.push( vCard.foldLine( prop[k].toString( version ), 75 ) )\n      }\n    } else if( !prop.isEmpty() ) {\n      vcf.push( vCard.foldLine( prop.toString( version ), 75 ) )\n    }\n  }\n\n  vcf.push( 'END:VCARD' )\n\n  return vcf.join( vCard.EOL )\n\n}\n\n// vCard Property constructor\nvCard.Property = require( './property' )\n\n/**\n * vCard prototype\n * @type {Object}\n */\nvCard.prototype = {\n\n  constructor: vCard,\n\n  /**\n   * Get a vCard property\n   * @param  {String} key\n   * @return {Object|Array}\n   */\n  get: function( key ) {\n\n    if( this.data[ key ] == null ) {\n      return this.data[ key ]\n    }\n\n    if( Array.isArray( this.data[ key ] ) ) {\n      return this.data[ key ].map( function( prop ) {\n        return prop.clone()\n      })\n    } else {\n      return this.data[ key ].clone()\n    }\n\n  },\n\n  /**\n   * Set a vCard property\n   * @param {String} key\n   * @param {String} value\n   * @param {Object} params\n   */\n  set: function( key, value, params ) {\n    return this.setProperty( new vCard.Property( key, value, params ) )\n  },\n\n  /**\n   * Add a vCard property\n   * @param {String} key\n   * @param {String} value\n   * @param {Object} params\n   */\n  add: function( key, value, params ) {\n    var prop = new vCard.Property( key, value, params )\n    this.addProperty( prop )\n    return this\n  },\n\n  /**\n   * Set a vCard property from an already\n   * constructed vCard.Property\n   * @param {vCard.Property} prop\n   */\n  setProperty: function( prop ) {\n    this.data[ prop._field ] = prop\n    return this\n  },\n\n  /**\n   * Add a vCard property from an already\n   * constructed vCard.Property\n   * @param {vCard.Property} prop\n   */\n  addProperty: function( prop ) {\n\n    var key = prop._field\n\n    if( Array.isArray( this.data[ key ] ) ) {\n      this.data[ key ].push( prop )\n    } else if( this.data[ key ] != null ) {\n      this.data[ key ] = [ this.data[ key ], prop ]\n    } else {\n      this.data[ key ] = prop\n    }\n\n    return this\n\n  },\n\n  /**\n   * Parse a vcf formatted vCard\n   * @param  {String} value\n   * @return {vCard}\n   */\n  parse: function( value ) {\n\n    // Normalize & split\n    var lines = vCard.normalize( value )\n      .split( /\\r\\n/g )\n\n    // Keep begin and end markers\n    // for eventual error messages\n    var begin = lines[0]\n    var version = lines[1]\n    var end = lines[ lines.length - 1 ]\n\n    if( !/BEGIN:VCARD/i.test( begin ) )\n      throw new SyntaxError( 'Invalid vCard: Expected \"BEGIN:VCARD\" but found \"'+ begin +'\"' )\n\n    if( !/END:VCARD/i.test( end ) )\n      throw new SyntaxError( 'Invalid vCard: Expected \"END:VCARD\" but found \"'+ end +'\"' )\n\n    // TODO: For version 2.1, the VERSION can be anywhere between BEGIN & END\n    if( !/VERSION:\\d\\.\\d/i.test( version ) )\n      throw new SyntaxError( 'Invalid vCard: Expected \"VERSION:\\\\d.\\\\d\" but found \"'+ version +'\"' )\n\n    this.version = version.substring( 8, 11 )\n\n    if( !vCard.isSupported( this.version ) )\n      throw new Error( 'Unsupported version \"' + this.version + '\"' )\n\n    this.data = vCard.parseLines( lines )\n\n    return this\n\n  },\n\n  /**\n   * Format the vCard as vcf with given version\n   * @param  {String} version\n   * @param  {String} charset\n   * @return {String}\n   */\n  toString: function( version, charset ) {\n    version = version || this.version\n    return vCard.format( this, version )\n  },\n\n  /**\n   * Format the card as jCard\n   * @param {String} version='4.0'\n   * @return {Array} jCard\n   */\n  toJCard: function( version ) {\n\n    version = version || '4.0'\n\n    var keys = Object.keys( this.data )\n    var data = [ [ 'version', {}, 'text', version ] ]\n    var prop = null\n\n    for( var i = 0; i < keys.length; i++ ) {\n      if( keys[i] === 'version' ) continue;\n      prop = this.data[ keys[i] ]\n      if( Array.isArray( prop ) ) {\n        for( var k = 0; k < prop.length; k++ ) {\n          data.push( prop[k].toJSON() )\n        }\n      } else {\n        data.push( prop.toJSON() )\n      }\n    }\n\n    return [ 'vcard', data ]\n\n  },\n\n  /**\n   * Format the card as jCard\n   * @return {Array} jCard\n   */\n  toJSON: function() {\n    return this.toJCard( this.version )\n  },\n\n}\n\n// Exports\nmodule.exports = vCard\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('h1',[_vm._v(\"Import\")]),_vm._v(\" Import a list of contacts. multi-contacts exemple contacts.vcf \"),_c('b-form-file',{attrs:{\"placeholder\":\"Choose a file or drop it here...\",\"drop-placeholder\":\"Drop file here...\"},model:{value:(_vm.file),callback:function ($$v) {_vm.file=$$v},expression:\"file\"}}),_vm._v(\" \"+_vm._s(_vm.contacts.length)+\" imports \"),_c('br'),_c('b-list-group',_vm._l((_vm.contacts),function(contact,i){return _c('b-list-group-item',{key:i},[_c('b-form-checkbox',{attrs:{\"id\":'checkbox-'+i,\"name\":\"checkbox-1\"},model:{value:(contact.checked),callback:function ($$v) {_vm.$set(contact, \"checked\", $$v)},expression:\"contact.checked\"}},[_c('h6',[_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:('collapse-2'+i),expression:\"'collapse-2'+i\"}],staticClass:\"m-1\",attrs:{\"variant\":\"info\",\"size\":\"sm\"}},[_vm._v(\"+\")]),_vm._v(\" \"+_vm._s(contact.get('n') || contact.get('fn'))+\" \")],1)]),_c('b-collapse',{attrs:{\"id\":'collapse-2'+i}},[_c('b-card',[_vm._v(_vm._s(contact.checked)),_c('small',[_vm._v(_vm._s(contact.data))])])],1)],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container>\r\n    <h1>Import</h1>\r\n\r\n    Import a list of contacts. multi-contacts exemple contacts.vcf\r\n\r\n    <b-form-file\r\n    v-model=\"file\"\r\n    placeholder=\"Choose a file or drop it here...\"\r\n    drop-placeholder=\"Drop file here...\"\r\n    ></b-form-file>\r\n\r\n    {{ contacts.length }} imports <br>\r\n    <!-- [ ] Import All  [ ] Select (radio)  <b-button @click=\"importer\">Import</b-button><br> -->\r\n\r\n\r\n\r\n\r\n    <b-list-group>\r\n      <b-list-group-item v-for=\"(contact, i) in contacts\" :key=\"i\">\r\n        <b-form-checkbox\r\n        :id=\"'checkbox-'+i\"\r\n        name=\"checkbox-1\"\r\n        v-model=\"contact.checked\"\r\n        >\r\n        <h6>\r\n          <b-button v-b-toggle=\"'collapse-2'+i\" class=\"m-1\" variant=\"info\" size=\"sm\">+</b-button>\r\n          {{ contact.get('n') || contact.get('fn') }}\r\n        </h6>\r\n\r\n      </b-form-checkbox>\r\n\r\n\r\n\r\n      <!-- Element to collapse -->\r\n      <b-collapse :id=\"'collapse-2'+i\">\r\n        <b-card >{{ contact.checked }}<small>{{ contact.data }}</small></b-card>\r\n      </b-collapse>\r\n\r\n      <!-- <b-button v-b-toggle=\"'collapse-'+i\" class=\"m-1\">show</b-button>\r\n      <b-collapse id=\"'collapse-'+i\">\r\n      <b-card><small>{{ contact.data }}</small></b-card>\r\n    </b-collapse> -->\r\n\r\n\r\n\r\n  </b-list-group-item>\r\n</b-list-group>\r\n\r\n</b-container>\r\n</template>\r\n\r\n<script>\r\nimport vCard from 'vcf' // https://www.npmjs.com/package/vcf\r\nconsole.log(vCard)\r\n\r\n\r\nexport default {\r\n  name: 'Import',\r\n  data() {\r\n    return {\r\n      file: null,\r\n      contacts : []\r\n    };\r\n  },\r\n  watch:{\r\n    file(file){\r\n      console.log(file)\r\n      if (file) {\r\n        let app = this\r\n        var reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = function (evt) {\r\n          //  console.log(evt.target.result)\r\n          // one card  var card = new vCard().parse( evt.target.result )\r\n          app.contacts = vCard.parse( evt.target.result )\r\n          // app.contacts = app.contacts.map(function(el) {\r\n          //   var o = Object.assign({}, el);\r\n          //   o.checked = true;\r\n          //   return o;\r\n          // })\r\n          console.log(app.contacts)\r\n          //   document.getElementById(\"fileContents\").innerHTML = evt.target.result;\r\n        }\r\n        reader.onerror = function (evt) {\r\n          console.log(\"ERROR\",evt.target.result)\r\n          // document.getElementById(\"fileContents\").innerHTML = \"error reading file\";\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    importer() {\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Import.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Import.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Import.vue?vue&type=template&id=6771e9b9&\"\nimport script from \"./Import.vue?vue&type=script&lang=js&\"\nexport * from \"./Import.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nconst CRLF = '\\r\\n'\n\nconst SP = ' '\n\n\n/**\n * Maximum line length (excluding <CR><LF>)\n * There are two limits that RFC 5322 places on the number of\n * characters in a line. Each line of characters MUST be\n * no more than 998 characters, and SHOULD be no more\n * than 78 characters, excluding the <CR><LF>.\n * @type {Number}\n * @constant\n */\nconst MAX_LINE_LENGTH = 998\n\n/**\n * Default maximum line length (excluding <CR><LF>)\n * @type {Number}\n * @constant\n */\nconst DEFAULT_LINE_LENGTH = 78\n\n/**\n * Minimum `maxLength` that can be used\n * @type {Number}\n * @constant\n */\nconst MIN_LINE_LENGTH = 2\n\n/**\n * Folds a long line according to RFC 5322\n * @see http://tools.ietf.org/html/rfc5322#section-2.1.1\n *\n * @param {String} input - input string\n * @param {Number} maxLength - maximum line length (excluding CRLF)\n * @param {Boolean} hardWrap - whether to insert a hard break at `maxLength`\n * @returns {String}\n */\nfunction foldLine( input, maxLength, hardWrap ) {\n\n  if( maxLength != null && maxLength < MIN_LINE_LENGTH ) {\n    throw new Error( 'Maximum length must not be less than ' + MIN_LINE_LENGTH )\n  }\n\n  if( maxLength != null && maxLength > MAX_LINE_LENGTH ) {\n    throw new Error( 'Maximum length must not exceed ' + MAX_LINE_LENGTH )\n  }\n\n  // RFC compliant default line length\n  maxLength = maxLength || DEFAULT_LINE_LENGTH\n\n  input = input.replace( /[\\r\\n]+/g, '' )\n\n  // We really don't need to fold this\n  if( input.length <= maxLength ) {\n    return input\n  }\n\n  var output = ''\n  var index = 0\n  var nextIndex = 0\n  var length = input.length\n  var line = 0\n  var trim = 0\n\n  while( index < length ) {\n    if( !hardWrap && ~( nextIndex = input.lastIndexOf( SP, index + maxLength ) ) ) {\n      if( nextIndex > index ) {\n        output += input.slice( index, nextIndex ) + CRLF + SP\n        index = nextIndex\n      } else {\n        output += input.slice( index, index + maxLength - trim ) + CRLF + SP\n        index = index + maxLength - trim\n        hardWrap = true\n      }\n    } else {\n      output += input.slice( index, index + maxLength - trim ) + CRLF + SP\n      index = index + maxLength - trim\n    }\n    if( ( length - index ) < maxLength ) {\n      output += input.slice( index )\n      break\n    }\n    if( line === 0 ) {\n      trim = 1\n    }\n    line++\n  }\n\n  return output\n\n}\n\nfoldLine.unfold = function unfold( input ) {\n  return input.replace( /\\r\\n\\s/gm, '' )\n}\n\nmodule.exports = foldLine\n","/**\n * vCard Property\n * @constructor\n * @memberOf vCard\n * @param {String} field\n * @param {String} value\n * @param {Object} params\n * @return {Property}\n */\nfunction Property( field, value, params ) {\n\n  if( !(this instanceof Property) )\n    return new Property( value )\n\n  if( params != null )\n    Object.assign( this, params )\n\n  this._field = field\n  this._data = value\n\n  Object.defineProperty( this, '_field', { enumerable: false })\n  Object.defineProperty( this, '_data', { enumerable: false })\n\n}\n\n/**\n * Constructs a vCard.Property from jCard data\n * @param  {Array} data\n * @return {Property}\n */\nProperty.fromJSON = function( data ) {\n\n  var field = data[0]\n  var params = data[1]\n\n  if( !/text/i.test( data[2] ) )\n    params.value = data[2]\n\n  var value = Array.isArray( data[3] ) ?\n    data[3].join( ';' ) : data[3]\n\n  return new Property( field, value, params )\n\n}\n\n/**\n * Turn a string into capitalized dash-case\n * @internal used by `Property#toString()`\n * @param  {String} value\n * @return {String}\n * @ignore\n */\nfunction capitalDashCase( value ) {\n  return value.replace( /([A-Z])/g, '-$1' ).toUpperCase()\n}\n\n/**\n * Property prototype\n * @type {Object}\n */\nProperty.prototype = {\n\n  constructor: Property,\n\n  /**\n   * Check whether the property is of a given type\n   * @param  {String}  type\n   * @return {Boolean}\n   */\n  is: function( type ) {\n    type = ( type + '' ).toLowerCase()\n    return Array.isArray( this.type ) ?\n      this.type.indexOf( type ) >= 0 :\n      this.type === type\n  },\n\n  /**\n   * Check whether the property is empty\n   * @return {Boolean}\n   */\n  isEmpty: function() {\n    return this._data == null &&\n      Object.keys( this ).length === 0\n  },\n\n  /**\n   * Clone the property\n   * @return {Property}\n   */\n  clone: function() {\n    return new Property( this._field, this._data, this )\n  },\n\n  /**\n   * Format the property as vcf with given version\n   * @param  {String} version\n   * @return {String}\n   */\n  toString: function( version ) {\n\n    var propName = (this.group ? this.group + '.' : '') + capitalDashCase( this._field )\n    var keys = Object.keys( this )\n    var params = []\n\n    for( var i = 0; i < keys.length; i++ ) {\n      if (keys[i] === 'group') continue\n\n      switch (propName) {\n        case 'TEL':\n        case 'ADR':\n        case 'EMAIL':\n          if (version === '2.1') {\n            if (Array.isArray(this[keys[i]]))\n              params.push(this[keys[i]].join(';'))\n            else\n              params.push(this[keys[i]])\n          }\n          else\n            params.push(capitalDashCase(keys[i]) + '=' + this[keys[i]])\n          break\n        default:\n          params.push(capitalDashCase(keys[i]) + '=' + this[keys[i]])\n      }\n    }\n\n    if (version === '2.1' || version === '3.0')\n      return propName +\n        ( params.length ? ';' + params.join( ';' ).toUpperCase() : params.toString().toUpperCase() ) + ':' +\n        ( Array.isArray( this._data ) ? this._data.join( ';' ) : this._data )\n    else\n      return propName +\n        ( params.length ? ';' + params.join( ';' ) : params ) + ':' +\n        ( Array.isArray( this._data ) ? this._data.join( ';' ) : this._data )\n\n  },\n\n  /**\n   * Get the property's value\n   * @return {String}\n   */\n  valueOf: function() {\n    return this._data\n  },\n\n  /**\n   * Format the property as jCard data\n   * @return {Array}\n   */\n  toJSON: function() {\n\n    var params = Object.assign({},this)\n\n    if( params.value === 'text' ) {\n      params.value = void 0\n      delete params.value\n    }\n\n    var data = [ this._field, params, this.value || 'text' ]\n\n    switch( this._field ) {\n      default: data.push( this._data ); break\n      case 'adr':\n      case 'n':\n        data.push( this._data.split( ';' ) )\n    }\n\n    return data\n\n  },\n\n}\n\n// Exports\nmodule.exports = Property\n","var camelCase = require( 'camelcase' )\nvar Property = require( './property' )\n\nfunction set( object, key, value ) {\n  if( Array.isArray( object[ key ] ) ) {\n    object[ key ].push( value )\n  } else if( object[ key ] != null ) {\n    object[ key ] = [ object[ key ], value ]\n  } else {\n    object[ key ] = value\n  }\n}\n\nfunction createParams( params, param ) {\n\n  var parts = param.split( '=' )\n  var k = camelCase( parts[0] )\n  var value = parts[1]\n\n  if( value == null || value === '' ) {\n    value = parts[0]\n    k = 'type'\n  }\n\n  if( k === 'type' ) {\n\n    if (value[ 0 ] === '\"' && value[ value.length - 1 ] === '\"' && value.indexOf(',') !== -1)\n      value = value.slice(1, -1)\n    value.toLowerCase().split( ',' ).forEach( function( value ) {\n      set( params, k, value )\n    })\n\n    return params\n\n  }\n\n  set( params, k, value )\n\n  return params\n\n}\n\nfunction parseLines( lines ) {\n\n  var data = {}\n\n  // NOTE: Line format:\n  //  PROPERTY[;PARAMETER[=VALUE]]:Attribute[;Attribute]\n  var line = null\n  var pattern = /^([^;:]+)((?:;(?:[^;:]+))*)(?:\\:([\\s\\S]+))?$/i\n  var len = lines.length - 1\n\n  for( var i = 1; i < len; i++ ) {\n\n    line = lines[i]\n\n    var match = pattern.exec( line )\n    if( !match ) continue;\n\n    var name = match[1].split('.')\n    var property = name.pop()\n    var group = name.pop()\n    var value = match[3]\n    var params = match[2] ?\n      match[2].replace( /^;|;$/g, '' ).split( ';' ) : []\n\n    var propParams = params.reduce( createParams, group ? { group: group } : {})\n    var propName = camelCase( property )\n    var propVal = new Property( propName, value, propParams )\n\n    set( data, propName, propVal )\n\n  }\n\n  return data\n\n}\n\nmodule.exports = parseLines\n"],"sourceRoot":""}