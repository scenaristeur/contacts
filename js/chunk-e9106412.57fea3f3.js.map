{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.symbol.async-iterator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncIterator.js","webpack:///./node_modules/idb/build/esm/wrap-idb-value.js","webpack:///./node_modules/idb/build/esm/index.js","webpack:///./node_modules/idb/build/esm/async-iterators.js","webpack:///./src/models/Thing.js","webpack:///./src/components/basic/NewThing.vue?b18d","webpack:///src/components/basic/NewThing.vue","webpack:///./src/components/basic/NewThing.vue?f1ac","webpack:///./src/components/basic/NewThing.vue"],"names":["defineWellKnownSymbol","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap","result","addEventListener","then","value","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","target","prop","receiver","get","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","includes","args","apply","unwrap","this","storeNames","sort","transformCachableValue","Proxy","IDBRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","async","storeName","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Thing","jsonld","owl","as","schema","options","console","log","demo","createObjectStore","keyPath","createIndex","add","title","date","Date","body","getAllFromIndex","article","update","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","type","model","$$v","expression","on","create","_v","staticRenderFns","props","data","methods","thing","ldp_server","url","fetch","headers","JSON","stringify","$emit","computed","models","component"],"mappings":"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","file":"js/chunk-e9106412.57fea3f3.js","sourcesContent":["var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { r as replaceTraps, i as instanceOfAny, a as reverseTransformCache, u as unwrap } from './wrap-idb-value.js';\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n","import { openDB } from 'idb/with-async-ittr.js';\r\n\r\nexport default class Thing {\r\n  constructor() {\r\n    this.jsonld = {\r\n      '@context': {\r\n        owl: \"http://www.w3.org/2002/07/owl#\",\r\n        as: \"https://www.w3.org/ns/activitystreams\",\r\n        schema: \"http://schema.org/\"\r\n      },\r\n      '@id': null,\r\n      '@type': \"owl:Thing\",\r\n      'schema:name': \"__NEW__THING__\"\r\n    }\r\n  }\r\n\r\n  save(options = {}){\r\n    console.log(\"save\",this,  options)\r\n    this.demo()\r\n  }\r\n  async demo() {\r\n    const db = await openDB('Articles', 1, {\r\n      upgrade(db) {\r\n        // Create a store of objects\r\n        const store = db.createObjectStore('articles', {\r\n          // The 'id' property of the object will be the key.\r\n          keyPath: '@id',\r\n          // If it isn't explicitly set, create a value by auto incrementing.\r\n          //  autoIncrement: true,\r\n        });\r\n        // Create an index on the 'date' property of the objects.\r\n        store.createIndex('date', 'date');\r\n      },\r\n    });\r\n\r\n    // Add an article:\r\n    await db.add('articles', {\r\n      '@id': 'boo1',\r\n      title: 'Article 1',\r\n      date: new Date('2019-01-01'),\r\n      body: 'Article one',\r\n    });\r\n\r\n    // Add multiple articles in one transaction:\r\n    {\r\n      const tx = db.transaction('articles', 'readwrite');\r\n      await Promise.all([\r\n        tx.store.add({\r\n          '@id': 'boo2',\r\n          title: 'Article 2',\r\n          date: new Date('2019-01-01'),\r\n          body: 'deuxieme ',\r\n        }),\r\n        tx.store.add({\r\n          '@id': 'boo3',\r\n          title: 'Article 3',\r\n          date: new Date('2019-01-02'),\r\n          body: 'et trois',\r\n        }),\r\n        tx.done,\r\n      ]);\r\n    }\r\n\r\n    // Get all the articles in date order:\r\n    console.log(await db.getAllFromIndex('articles', 'date'));\r\n\r\n    // Add 'And, happy new year!' to all articles on 2019-01-01:\r\n    {\r\n      const tx = db.transaction('articles', 'readwrite');\r\n      const index = tx.store.index('date');\r\n\r\n      for await (const cursor of index.iterate(new Date('2019-01-01'))) {\r\n        const article = { ...cursor.value };\r\n        article.body += ' And, happy new year!';\r\n        cursor.update(article);\r\n      }\r\n\r\n      await tx.done;\r\n    }\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-input-group',{staticClass:\"mt-3\"},[_c('b-form-input',{attrs:{\"placeholder\":'new '+_vm.type.name},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_c('b-input-group-append',[_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.create}},[_vm._v(\"+\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container fluid>\r\n\r\n\r\n    <b-input-group class=\"mt-3\">\r\n      <b-form-input v-model=\"name\" :placeholder=\"'new '+type.name\"></b-form-input>\r\n      <b-input-group-append>\r\n        <b-button @click=\"create\" variant=\"primary\">+</b-button>\r\n      </b-input-group-append>\r\n    </b-input-group>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport Thing from '@/models/Thing'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default {\r\n  name: 'NewThing',\r\n  props: ['type'],\r\n  data() {\r\n    return {\r\n      name: ''\r\n    }\r\n  },\r\n  methods: {\r\n    create() {\r\n      let thing = new Thing()\r\n      //  let thing = {}\r\n      console.log('type',this.type)\r\n      thing['@id'] = this.ldp_server.url+'/'+this.type.path+'/'+uuidv4() //this.ldp_server.url+'/'+this.type.path+'/'+thing.['@id']\r\n      thing['@type'] = this.type.type\r\n      thing['schema:name'] = this.name\r\n\r\n      console.log(thing)\r\n      fetch(this.ldp_server.url+'/'+this.type.path+'/' ,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(thing)\r\n      })\r\n      .then(function(res){\r\n        console.log(\"error\",res)\r\n\r\n      })\r\n      .catch(function(res){ console.log(res) })\r\n      this.$emit('itemCreated', thing)\r\n    }\r\n  },\r\n  computed: mapState({\r\n    ldp_server: s =>  s.ldp_store.ldp_server,\r\n    models: s =>  s.ldp_store.models\r\n\r\n  }),\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewThing.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewThing.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewThing.vue?vue&type=template&id=f6959ee8&\"\nimport script from \"./NewThing.vue?vue&type=script&lang=js&\"\nexport * from \"./NewThing.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}